<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title><%= title %></title>
		<style>
			body {
			    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
			    background: #f8f8f8;
			    display: flex;
			    justify-content: center;
			    align-items: center;
			    min-height: 100vh;
			    margin: 0;
			    padding: 20px;
			    box-sizing: border-box;
			}

			.container {
			    background: #fff;
			    padding: 40px;
			    border-radius: 12px;
			    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
			    max-width: 400px;
			    width: 100%;
			    text-align: center;
			}

			h1 {
			    margin-bottom: 24px;
			    font-weight: 600;
			    color: #333;
			}

			.success-message {
			    background: #d4edda;
			    border: 1px solid #c3e6cb;
			    color: #155724;
			    padding: 12px 20px;
			    border-radius: 6px;
			    margin-bottom: 20px;
			}

			.error-message {
			    color: #dc3545;
			    font-size: 14px;
			    margin-bottom: 16px;
			    min-height: 20px;
			    text-align: left;
			}

			.general-error {
			    text-align: center;
			    font-weight: 600;
			    background: #f8d7da;
			    border: 1px solid #f5c6cb;
			    padding: 12px;
			    border-radius: 6px;
			    margin-bottom: 16px;
			    display: none;
			}

			label {
			    display: block;
			    text-align: left;
			    margin-bottom: 6px;
			    font-weight: 500;
			    color: #333;
			}

			input[type="email"],
			input[type="text"] {
			    width: 100%;
			    padding: 12px;
			    margin-bottom: 6px;
			    border-radius: 6px;
			    border: 1px solid #ccc;
			    font-size: 14px;
			    box-sizing: border-box;
			    transition: border-color 0.3s;
			}

			input[type="email"]:focus,
			input[type="text"]:focus {
			    outline: none;
			    border-color: #007bff;
			}

			input.error {
			    border-color: #dc3545;
			    background-color: #ffe6e6;
			}

			button {
			    background: #000;
			    color: #fff;
			    border: none;
			    padding: 12px;
			    border-radius: 6px;
			    font-size: 14px;
			    cursor: pointer;
			    width: 100%;
			    transition: background-color 0.3s;
			}

			button:hover:not(:disabled) {
			    background: #222;
			}

			button:disabled {
			    background: #888;
			    cursor: not-allowed;
			}

			.signin-link {
			    margin-top: 24px;
			    font-size: 13px;
			}

			.signin-link a {
			    color: #000;
			    font-weight: 600;
			    text-decoration: none;
			}

			.signin-link a:hover {
			    text-decoration: underline;
			}
		</style>
	</head>
	<body>
		<div class="container">
			<h1>Verify Your Account</h1>

			<div class="general-error" id="general-error"></div>

			<form id="verifyForm" novalidate>
				<!-- <label for="email">Email address</label> -->
				<input
					type="hidden"
					name="email"
					value="<%= formData.email %>"
				/>
				<div id="email-error" class="error-message"></div>

				<label for="otp">6-digit OTP</label>
				<input
					type="text"
					id="otp"
					name="otp"
					maxlength="6"
					placeholder="Enter OTP"
					value="<%= formData.otp || '' %>"
					required
				/>
				<div id="otp-error" class="error-message"></div>

				<button type="submit">Verify Account</button>
			</form>

			<button
				id="resendBtn"
				disabled
				style="margin-top: 16px; background: none; border: none; color: #888; font-weight: 600; cursor: not-allowed; text-decoration: underline; padding: 0;"
			>
				Didn't receive the code? Resend OTP (<span id="countdown"
					>60</span
				>s)
			</button>

			<div class="signin-link">
				Need help? <a href="/user/login">Sign in</a>
			</div>
		</div>

		<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
		<script>
			const verifyForm = document.getElementById('verifyForm');
			const resendBtn = document.getElementById('resendBtn');
			// const emailInput = document.getElementById('email');
			const otpInput = document.getElementById('otp');
			const emailError = document.getElementById('email-error');
			const otpError = document.getElementById('otp-error');
			const generalError = document.getElementById('general-error');

			document.addEventListener('DOMContentLoaded', function () {
			    const resendBtn = document.getElementById('resendBtn');
			    const countdownSpan = document.getElementById('countdown');
			    let timeLeft = 60; // seconds

			    const timer = setInterval(() => {
			        timeLeft--;
			        countdownSpan.textContent = timeLeft;

			        if (timeLeft <= 0) {
			            clearInterval(timer);
			            resendBtn.disabled = false;
			            resendBtn.style.color = '#000';
			            resendBtn.style.cursor = 'pointer';
			            countdownSpan.style.display = 'none';
			            resendBtn.textContent = "Didn't receive the code? Resend OTP";
			        }
			    }, 1000);
			});

			const clearErrors = () => {
			    emailError.textContent = '';
			    otpError.textContent = '';
			    generalError.style.display = 'none';
			    generalError.textContent = '';
			};

			const showGeneralError = (message) => {
			    generalError.textContent = message;
			    generalError.style.display = 'block';
			};

			verifyForm.addEventListener('submit', async (e) => {
			    e.preventDefault();
			    clearErrors();

			    // const email = emailInput.value.trim();
			    const otp = otpInput.value.trim();

			    try {
			        const res = await axios.post('/user/verify-otp', {  otp });

			        if (res.data.redirect) {
			            window.location.href = res.data.redirect;
			        }
			    } catch (err) {
			        const res = err.response;
			        if (!res) return showGeneralError('Network error. Try again later.');

			        const message = res.data.message || '';
			        if (message.includes('email')) emailError.textContent = message;
			        else if (message.includes('OTP') || message.includes('code')) otpError.textContent = message;
			        else showGeneralError(message);
			    }
			});

			resendBtn.addEventListener('click', async (e) => {
			    e.preventDefault();
			    clearErrors();

			    const email = emailInput.value.trim();
			    if (!email) {
			        emailError.textContent = 'Please enter your email.';
			        return;
			    }

			    try {
			        const res = await axios.post('/user/resend-otp', { email });
			        alert(res.data.message || 'OTP sent! Check your inbox.');
			    } catch (err) {
			        const res = err.response;
			        const message = res?.data?.message || 'Something went wrong. Try again.';
			        if (message.includes('email')) emailError.textContent = message;
			        else showGeneralError(message);
			    }
			});
		</script>
	</body>
</html>
